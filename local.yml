version: '3'

volumes:
#  open_exploit_database_scraping_local_postgres_data: {}
#  open_exploit_database_scraping_local_postgres_data_backups: {}
  open_exploit_database_scraping_local_mysql_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: open_exploit_database_scraping_local_django
    container_name: open_exploit_database_scraping_local_django
    depends_on:
#      - db
      - tor
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start
    networks:
      - backend
#      - frontend

#  postgres:
#    build:
#      context: .
#      dockerfile: ./compose/production/postgres/Dockerfile
#    image: open_exploit_database_scraping_production_postgres
#    container_name: open_exploit_database_scraping_local_postgres
#    volumes:
#      - open_exploit_database_scraping_local_postgres_data:/var/lib/postgresql/data
#      - open_exploit_database_scraping_local_postgres_data_backups:/backups
#    env_file:
#      - ./.envs/.local/.postgres
#    environment:
#      - POSTGRES_HOST_AUTH_METHOD=trust
#    networks:
#        - backend

  db:
    image:
      mysql:8.0
    container_name: open_exploit_database_scraping_mysql_django
    volumes:
      - open_exploit_database_scraping_local_mysql_data:/var/lib/mysql
    env_file:
      - ./.envs/.local/.mysql
    networks:
      - backend

  # docs:
  #   image: open_exploit_database_scraping_local_docs
  #   container_name: open_exploit_database_scraping_local_docs
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/docs/Dockerfile
  #   env_file:
  #     - ./.envs/.local/.django
  #   volumes:
  #     - ./docs:/docs:z
  #     - ./config:/app/config:z
  #     - ./open_exploit_database_scraping:/app/open_exploit_database_scraping:z
  #   ports:
  #     - '9000:9000'
  #   command: /start-docs

#  mailhog:
#    image: mailhog/mailhog:v1.0.0
#    container_name: open_exploit_database_scraping_local_mailhog
#    ports:
#      - "8025:8025"

  # tor service
  tor:
    image: oeds_tor:latest
    build:
      context: .
      dockerfile: ./compose/local/tor/Dockerfile
    container_name: oeds_tor
    ports:
      - "127.0.0.1:9050:9050"
      - "127.0.0.1:9051:9051"
    networks:
      - backend

  # add redis as a message broker
#  redis:
#      image: "redis:alpine"
#      networks:
#          - celery

  # celery worker process -- launches child celery processes equal to the number of available cores
  # celeryworker:
  #   <<: *django
  #   image: djangoapp_celeryworker:latest
  #   container_name: djangoapp_celeryworker
  #   depends_on:
  #     - redis
  #     - postgres
  #     - mailhog
  #   ports: []
  #   command: celery -A config.celery_app worker -l info -Q celery

  # # celery worker process -- launches child celery processes equal to the number of available cores
  # celerybeat:
  #   <<: *django
  #   image: saferoutz_local_celerybeat
  #   container_name: saferoutz_local_celerybeat
  #   depends_on:
  #     - redis
  #     - postgres
  #     - mailhog
  #   ports: []
  #   command: /start-celerybeat

networks:
#    frontend:
#        name: djangocog_frontend
    backend:
        name: djangocog_backend
#    celery:
#        name: djangocog_celery
