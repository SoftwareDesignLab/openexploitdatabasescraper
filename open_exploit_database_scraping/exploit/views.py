from django.shortcuts import render
from rest_framework.views import APIView
from rest_framework import viewsets
from rest_framework.response import Response
from rest_framework import status
from rest_framework import permissions
from .models import Exploit
from .serializers import ExploitSerializer
from .pagination import ExploitPagination

class ExploitListApiView(viewsets.ModelViewSet):
    # add permission to check if user is authenticated
    permission_classes = [permissions.IsAuthenticated]
    serializer_class = ExploitSerializer
    # Bring in our custom paginator.
    pagination_class = ExploitPagination

    def get_queryset(self):
        """Generate the queryset for the exploits/ endpoint."""
        # Initialize queryset as all exploits.
        queryset = Exploit.objects.all()
        # Check if the cve_id param was passed.
        cve_id = self.request.GET.get("cve_id", None)
        # If cve_id param was passed, apply it.
        if cve_id:
            queryset = queryset.filter(cve_id__icontains=cve_id)
        # Return the queryset.
        return queryset

    def get(self, request, *args, **kwargs):
        """Get all Exploit models."""
        serializer = ExploitSerializer(Exploit.objects.all(), many=True)
        return Response(serializer.data, status=status.HTTP_200_OK)