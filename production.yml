version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}
  django_staticfiles: {}

services:
  nginx:
    image: nginx:1.15
    restart: unless-stopped
    depends_on:
        - django
    ports:
        # Map standard HTTP/HTTPS ports from the host
        # to the NGINX container.
        - 80:80
        - 443:443
    volumes:
        - /opt/ssl:/etc/ssl
        - ./compose/production/nginx/dcc.conf:/etc/nginx/conf.d/dcc.conf
        - django_staticfiles:/var/staticfiles
        - ./uploads:/var/mediafiles/uploads
    env_file:
      - ./.envs/.production/.nginx

    networks:
      - network-frontend

  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: open_exploit_database_scraping_production_django
    volumes:
      - production_django_media:/app/open_exploit_database_scraping/media
      - django_staticfiles:/var/staticfiles
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

    networks:
      - network-backend
      - network-frontend

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: open_exploit_database_scraping_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

    networks:
      - network-backend

  redis:
    image: redis:6
    networks:
      - network-backend
      - network-frontend

networks:
  network-backend:
  network-frontend:
