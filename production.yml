version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}
  volume_staticfiles: {}
  static_volume: {}
  media: {}
  tmp_file: {}

services:
  doccano:
    image: doccano/doccano:backend
    volumes:
      - static_volume:/backend/staticfiles
      - media:/backend/media
      - tmp_file:/backend/filepond-temp-uploads
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
      - ./.envs/.production/.doccano

    depends_on:
      - postgres
    networks:
      - network-backend
      - network-frontend

  celery:
    image: doccano/doccano:backend
    volumes:
      - media:/backend/media
      - tmp_file:/backend/filepond-temp-uploads
    entrypoint: ["/opt/bin/prod-celery.sh"]
    
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
      - ./.envs/.production/.doccano
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - network-backend

  flower:
    image: doccano/doccano:backend
    entrypoint: ["/opt/bin/prod-flower.sh"]
    
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
      - ./.envs/.production/.doccano
    depends_on:
      - celery
    ports:
      - 5555:5555
    networks:
      - network-backend
      - network-frontend

  rabbitmq:
    image: rabbitmq:3.10.7-alpine
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
      - ./.envs/.production/.doccano
    ports:
      - 5672:5672
    networks:
      - network-backend


  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: open_exploit_database_scraping_production_django
    volumes:
      - production_django_media:/app/open_exploit_database_scraping/media
      - volume_staticfiles:/var/staticfiles:z
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: open_exploit_database_scraping_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: redis:6

  nginx:
    image: nginx:1.15
    restart: unless-stopped
    depends_on:
        - django
    ports:
        # Map standard HTTP/HTTPS ports from the host
        # to the NGINX container.
        - 80:80
        - 443:443
    volumes:
        - /opt/ssl:/etc/ssl
        - ./compose/production/nginx/dcc.conf:/etc/nginx/conf.d/dcc.conf
        - volume_staticfiles:/var/staticfiles
        - ./uploads:/var/mediafiles/uploads
    env_file:
      - ./.envs/.production/.nginx

networks:
  network-backend:
  network-frontend: