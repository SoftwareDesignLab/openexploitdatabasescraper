import json
import scrapy
import socket
import environ
import requests
from time import sleep
from urllib.request import urlopen
from datetime import datetime, timedelta
from exploit_scrapers.exploit_scrapers.utils import save_exploit
from open_exploit_database_scraping.utils.tor_requests import RequestsTor

class NVDSpider(scrapy.spider):
    source = "NVD"
    name = "nvd"
    start_urls = ["https://nvd.nist.gov/vuln/data-feeds"]
    base_url = "https://nvd.nist.gov"

    def __init__(self, save_all, update=None):
        self.update = update

    def parse(self, response):
        if update:
            # Use API here
            return
        # Use xpath to get all of the links to CVE zipped json files
        zipped_json_links = response.xpath("//div[@id='divJSONFeeds']/div[@id='vuln-feed-table']/div/table[@class='xml-feed-table table table-striped table-condensed']/tbody/tr/td/a[contains(text(), 'ZIP')]/@href").getall()
        for link in zipped_json_links:
            # add relative link to the base url.
            nvd_json = load_zipped_json(base_url + link)

    def load_zipped_json(self, url):
        json_string = ""
        # TODO: Use tor here
        zipped_json = urlopen(url)
        # Ensure the download was successful
        if zipped_json.status != 200:
            print("\n[ERROR]")
            return
        # Get the filename(s)
        filenames = zipped_json.namelist()
        # We are operating off the assumption that there is only 1 zipped json file.
        if len(filenames) != 1:
            print("\n[ERROR]")
            return
        # Open the zipped file and read and decode it into memory.
        for line in zipped_json.open(filenames[0]).readlines():
            json_string += line.decode("utf-8")
        # Load the read file into a json object.
        json_file = json.loads(json_string)
        return json_file

    def parse_json(self, json_file):
        # Parse the wanted info from the json and
        raise NotImplementedError

    def ship_off(self):
        raise NotImplementedError

    